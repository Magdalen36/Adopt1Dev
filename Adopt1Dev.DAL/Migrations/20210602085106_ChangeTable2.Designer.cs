// <auto-generated />
using System;
using Adopt1Dev.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Adopt1Dev.DAL.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210602085106_ChangeTable2")]
    partial class ChangeTable2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Adopt1Dev.DAL.Entities.Categorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categorie");
                });

            modelBuilder.Entity("Adopt1Dev.DAL.Entities.Notation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Note")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.HasIndex("UserId");

                    b.ToTable("Notation");
                });

            modelBuilder.Entity("Adopt1Dev.DAL.Entities.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategorieId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CategorieId");

                    b.ToTable("Skill");
                });

            modelBuilder.Entity("Adopt1Dev.DAL.Entities.Tarif", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Prix")
                        .HasColumnType("float");

                    b.Property<int>("TypeTarifId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeTarifId");

                    b.HasIndex("UserId");

                    b.ToTable("Tarif");
                });

            modelBuilder.Entity("Adopt1Dev.DAL.Entities.TypeTarif", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeTarif");
                });

            modelBuilder.Entity("Adopt1Dev.DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<byte[]>("ImageFile")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ImageMimeType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User");

                    b.HasCheckConstraint("CK_Email", "Email LIKE '_%@_%'");
                });

            modelBuilder.Entity("Adopt1Dev.DAL.Entities.Notation", b =>
                {
                    b.HasOne("Adopt1Dev.DAL.Entities.Skill", "Skill")
                        .WithMany("Notations")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Adopt1Dev.DAL.Entities.User", "User")
                        .WithMany("Notations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Adopt1Dev.DAL.Entities.Skill", b =>
                {
                    b.HasOne("Adopt1Dev.DAL.Entities.Categorie", "Categorie")
                        .WithMany("Skills")
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorie");
                });

            modelBuilder.Entity("Adopt1Dev.DAL.Entities.Tarif", b =>
                {
                    b.HasOne("Adopt1Dev.DAL.Entities.TypeTarif", "TypeTarif")
                        .WithMany("Tarifs")
                        .HasForeignKey("TypeTarifId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Adopt1Dev.DAL.Entities.User", "User")
                        .WithMany("Tarifs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeTarif");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Adopt1Dev.DAL.Entities.Categorie", b =>
                {
                    b.Navigation("Skills");
                });

            modelBuilder.Entity("Adopt1Dev.DAL.Entities.Skill", b =>
                {
                    b.Navigation("Notations");
                });

            modelBuilder.Entity("Adopt1Dev.DAL.Entities.TypeTarif", b =>
                {
                    b.Navigation("Tarifs");
                });

            modelBuilder.Entity("Adopt1Dev.DAL.Entities.User", b =>
                {
                    b.Navigation("Notations");

                    b.Navigation("Tarifs");
                });
#pragma warning restore 612, 618
        }
    }
}
